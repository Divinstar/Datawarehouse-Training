Student Enrollment System

Database name: campusdb
collection name : enrollments


// 1. Use the Database

use campusdb


// 2. Insert Student Documents

db.enrollments.insertMany([ 
  { 
    name: "Ananya Verma", 
    studentId: 101, 
    courses: ["Python", "Java"], 
    address: { city: "Delhi", state: "Delhi" }, 
    feesPaid: true 
  }, 
  { 
    name: "Rohan Mehta", 
    studentId: 102, 
    courses: ["Python", "AI"], 
    address: { city: "Bangalore", state: "Karnataka" }, 
    feesPaid: false 
  }, 
  { 
    name: "Sneha Kapoor", 
    studentId: 103, 
    courses: [], 
    address: { city: "Hyderabad", state: "Telangana" }, 
    feesPaid: true 
  }, 
  { 
    name: "Imran Shaikh", 
    studentId: 104, 
    courses: ["Data Science", "Java"], 
    address: { city: "Delhi", state: "Delhi" }, 
    feesPaid: false 
  } 
])


// 3. Display All Student Records
db.enrollments.find().pretty()


// 4. Find All Students Enrolled in "Python"
db.enrollments.find({ courses: "Python" })


// 5. Find Students from Delhi Who Have Not Paid Fees
db.enrollments.find({ 
  "address.city": "Delhi", 
  feesPaid: false 
})


// 6. Add "AI Fundamentals" to a Specific Student's Courses
db.enrollments.updateOne(
  { studentId: 101 },
  { $addToSet: { courses: "AI Fundamentals" } }
)


// 7. Update the City of a Specific Student to "Mumbai"
db.enrollments.updateOne(
  { studentId: 102 },
  { $set: { "address.city": "Mumbai" } }
)

// 8. Set feesPaid = true for All Students from Delhi
db.enrollments.updateMany(
  { "address.city": "Delhi" },
  { $set: { feesPaid: true } }
)


// 9. Remove "Java" from Any Student Who Has It
db.enrollments.updateMany(
  { courses: "Java" },
  { $pull: { courses: "Java" } }
)


// 10. Delete All Students with No Courses Enrolled
db.enrollments.deleteMany({ courses: { $size: 0 } })



