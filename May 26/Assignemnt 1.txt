db.students.insertMany([
  {
    name: "Sana Iqbal",
    age: 22,
    gender: "Female",
    department: "Mathematics",
    courses: [
      { name: "Python", score: 88 },
      { name: "Statistics", score: 76 }
    ],
    address: {
      city: "Delhi",
      state: "Delhi",
      pincode: 110001
    },
    enrollmentDate: ISODate("2024-06-15T00:00:00Z"),
    isActive: true
  },
  {
    name: "John Doe",
    age: 24,
    gender: "Male",
    department: "Mechanical",
    courses: [
      { name: "Thermodynamics", score: 70 },
      { name: "Mechanics", score: 65 }
    ],
    address: {
      city: "Mumbai",
      state: "Maharashtra",
      pincode: 400001
    },
    enrollmentDate: ISODate("2023-05-10T00:00:00Z"),
    isActive: false
  },
  {
    name: "Riya Sharma",
    age: 20,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "MongoDB", score: 82 },
      { name: "Python", score: 95 }
    ],
    address: {
      city: "Pune",
      state: "Maharashtra",
      pincode: 411001
    },
    enrollmentDate: ISODate("2024-08-12T00:00:00Z"),
    isActive: true
  },
  {
    name: "Aditya Verma",
    age: 23,
    gender: "Male",
    department: "Mathematics",
    courses: [
      { name: "Algebra", score: 90 },
      { name: "Python", score: 92 }
    ],
    address: {
      city: "Hyderabad",
      state: "Telangana",
      pincode: 500084
    },
    enrollmentDate: ISODate("2024-03-25T00:00:00Z"),
    isActive: true
  },
  {
    name: "Meera Nair",
    age: 19,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "C++", score: 65 },
      { name: "Python", score: 70 }
    ],
    address: {
      city: "Kochi",
      state: "Kerala",
      pincode: 682001
    },
    enrollmentDate: ISODate("2023-11-05T00:00:00Z"),
    isActive: false
  },
  {
    name: "Karan Patel",
    age: 25,
    gender: "Male",
    department: "Mechanical",
    courses: [
      { name: "Thermodynamics", score: 85 },
      { name: "CNC", score: 75 }
    ],
    address: {
      city: "Ahmedabad",
      state: "Gujarat",
      pincode: 380001
    },
    enrollmentDate: ISODate("2022-01-10T00:00:00Z"),
    isActive: true
  },
  {
    name: "Tina Roy",
    age: 21,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "MongoDB", score: 90 },
      { name: "Python", score: 89 }
    ],
    address: {
      city: "Hyderabad",
      state: "Telangana",
      pincode: 500082
    },
    enrollmentDate: ISODate("2024-08-15T00:00:00Z"),
    isActive: true
  },
  {
    name: "Dev Anand",
    age: 22,
    gender: "Male",
    department: "Mathematics",
    courses: [
      { name: "Python", score: 68 },
      { name: "Statistics", score: 72 }
    ],
    address: {
      city: "Chennai",
      state: "Tamil Nadu",
      pincode: 600001
    },
    enrollmentDate: ISODate("2024-04-01T00:00:00Z"),
    isActive: false
  },
  {
    name: "Zara Sheikh",
    age: 20,
    gender: "Female",
    department: "Mechanical",
    courses: [
      { name: "CAD", score: 60 },
      { name: "Mechanics", score: 58 }
    ],
    address: {
      city: "Delhi",
      state: "Delhi",
      pincode: 110002
    },
    enrollmentDate: ISODate("2023-09-20T00:00:00Z"),
    isActive: true
  },
  {
    name: "Rahul Yadav",
    age: 26,
    gender: "Male",
    department: "Computer Science",
    courses: [
      { name: "Python", score: 91 },
      { name: "Java", score: 87 }
    ],
    address: {
      city: "Lucknow",
      state: "Uttar Pradesh",
      pincode: 226001
    },
    enrollmentDate: ISODate("2024-07-07T00:00:00Z"),
    isActive: true
  },
  {
    name: "Priya Desai",
    age: 22,
    gender: "Female",
    department: "Mathematics",
    courses: [
      { name: "Python", score: 88 },
      { name: "MongoDB", score: 86 }
    ],
    address: {
      city: "Surat",
      state: "Gujarat",
      pincode: 395003
    },
    enrollmentDate: ISODate("2024-02-17T00:00:00Z"),
    isActive: true
  },
  {
    name: "Arjun Singh",
    age: 21,
    gender: "Male",
    department: "Computer Science",
    courses: [
      { name: "MongoDB", score: 84 },
      { name: "Python", score: 76 }
    ],
    address: {
      city: "Bhopal",
      state: "Madhya Pradesh",
      pincode: 462001
    },
    enrollmentDate: ISODate("2023-12-01T00:00:00Z"),
    isActive: false
  },
  {
    name: "Nisha Kumari",
    age: 23,
    gender: "Female",
    department: "Mathematics",
    courses: [
      { name: "Python", score: 95 },
      { name: "Algebra", score: 92 }
    ],
    address: {
      city: "Patna",
      state: "Bihar",
      pincode: 800001
    },
    enrollmentDate: ISODate("2024-05-21T00:00:00Z"),
    isActive: true
  },
  {
    name: "Yusuf Qureshi",
    age: 20,
    gender: "Male",
    department: "Mechanical",
    courses: [
      { name: "CAD", score: 65 },
      { name: "Mechanics", score: 70 }
    ],
    address: {
      city: "Nagpur",
      state: "Maharashtra",
      pincode: 440001
    },
    enrollmentDate: ISODate("2024-06-30T00:00:00Z"),
    isActive: false
  },
  {
    name: "Sneha Joshi",
    age: 24,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "Python", score: 77 },
      { name: "Node.js", score: 84 }
    ],
    address: {
      city: "Nashik",
      state: "Maharashtra",
      pincode: 422001
    },
    enrollmentDate: ISODate("2024-07-20T00:00:00Z"),
    isActive: true
  },
  {
    name: "Anil Kapoor",
    age: 27,
    gender: "Male",
    department: "Mathematics",
    courses: [
      { name: "Python", score: 59 },
      { name: "MongoDB", score: 79 }
    ],
    address: {
      city: "Indore",
      state: "Madhya Pradesh",
      pincode: 452001
    },
    enrollmentDate: ISODate("2023-03-18T00:00:00Z"),
    isActive: false
  },
  {
    name: "Pooja Reddy",
    age: 22,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "Python", score: 81 },
      { name: "MongoDB", score: 83 }
    ],
    address: {
      city: "Hyderabad",
      state: "Telangana",
      pincode: 500090
    },
    enrollmentDate: ISODate("2024-09-01T00:00:00Z"),
    isActive: true
  },
  {
    name: "Vikram Chauhan",
    age: 23,
    gender: "Male",
    department: "Mechanical",
    courses: [
      { name: "Mechanics", score: 82 },
      { name: "MongoDB", score: 60 }
    ],
    address: {
      city: "Jaipur",
      state: "Rajasthan",
      pincode: 302001
    },
    enrollmentDate: ISODate("2024-01-10T00:00:00Z"),
    isActive: true
  },
  {
    name: "Neha Mehta",
    age: 21,
    gender: "Female",
    department: "Computer Science",
    courses: [
      { name: "Node.js", score: 88 },
      { name: "Python", score: 92 }
    ],
    address: {
      city: "Delhi",
      state: "Delhi",
      pincode: 110003
    },
    enrollmentDate: ISODate("2024-10-01T00:00:00Z"),
    isActive: true
  }
]);






// Questions


// 1. Insert a new student record with embedded courses and address data
db.students.insertOne({
  name: "Test Student",
  age: 20,
  gender: "Non-Binary",
  department: "Physics",
  courses: [
    { name: "Quantum Mechanics", score: 88 },
    { name: "MongoDB", score: 91 }
  ],
  address: {
    city: "Shimla",
    state: "Himachal Pradesh",
    pincode: 171001
  },
  enrollmentDate: ISODate("2024-09-10T00:00:00Z"),
  isActive: true
});


// 2. Update score for a course (Python) inside the courses array
db.students.updateOne(
  { name: "Ayaan Khan", "courses.name": "Python" },
  { $set: { "courses.$.score": 95 } }
);


// 3. Delete a student whose name is "John Doe"
db.students.deleteOne({ name: "John Doe" });


// 4. Find all students in the "Computer Science" department
db.students.find({ department: "Computer Science" });


// 5. Find students where age is greater than 20
db.students.find({ age: { $gt: 20 } });


// 6. Find students enrolled between two dates
db.students.find({
  enrollmentDate: {
    $gte: ISODate("2024-06-01"),
    $lte: ISODate("2024-09-30")
  }
});


// 7. Find students who are either in "Computer Science" or "Mathematics"
db.students.find({ department: { $in: ["Computer Science", "Mathematics"] } });


// 8. Find students not in the "Mechanical" department
db.students.find({ department: { $ne: "Mechanical" } });


// 9. Find students whose courses.score is greater than 80
db.students.find({ "courses.score": { $gt: 80 } });


// 10. Group by department and count students
db.students.aggregate([
  { $group: { _id: "$department", count: { $sum: 1 } } }
]);


// 11. Calculate average age of students per department
db.students.aggregate([
  { $group: { _id: "$department", avgAge: { $avg: "$age" } } }
]);


// 12. Sort students by total course score
db.students.aggregate([
  { $project: { name: 1, totalScore: { $sum: "$courses.score" } } },
  { $sort: { totalScore: -1 } }
]);


// 13. Filter only active students before aggregation
db.students.aggregate([
  { $match: { isActive: true } },
  { $group: { _id: "$department", count: { $sum: 1 } } }
]);


// 14. Group and list unique cities from the address field
db.students.aggregate([
  { $group: { _id: "$address.city" } }
]);


// 15. Find students with only name, department, and city fields shown
db.students.find(
  {},
  { name: 1, department: 1, "address.city": 1, _id: 0 }
);


// 16. Exclude the _id field from output
db.students.find(
  {},
  { _id: 0 }
);


// 17. Show each student's name and total score using $project
db.students.aggregate([
  { $project: { name: 1, totalScore: { $sum: "$courses.score" } } }
]);


// 18. Query students where address.city = "Hyderabad"
db.students.find({ "address.city": "Hyderabad" });


// 19. Update address.pincode for a student
db.students.updateOne(
  { name: "Tina Roy" },
  { $set: { "address.pincode": 500050 } }
);


// 20. Add a new field landmark to all address objects
db.students.updateMany(
  {},
  { $set: { "address.landmark": "Near City Center" } }
);


// 21. Add a new course "Node.js" to a student's courses array
db.students.updateOne(
  { name: "Riya Sharma" },
  { $push: { courses: { name: "Node.js", score: 80 } } }
);


// 22. Remove a course by name "MongoDB" from the array
db.students.updateMany(
  {},
  { $pull: { courses: { name: "MongoDB" } } }
);


// 23. Find students who have enrolled in both Python and MongoDB
db.students.find({
  $and: [
    { "courses.name": "Python" },
    { "courses.name": "MongoDB" }
  ]
});


// 24. Use $elemMatch to query students where score in MongoDB > 80
db.students.find({
  courses: { $elemMatch: { name: "MongoDB", score: { $gt: 80 } } }
});

